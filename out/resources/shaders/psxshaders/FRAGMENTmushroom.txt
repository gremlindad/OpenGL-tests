#version 330 core

in float DiffAmt;
noperspective in vec2 TexCoords;
out vec4 FragColor;

struct Material
{
	sampler2D texture_diffuse1;
	//float shininess;

};

struct Light
{
	vec3 position;
	
	vec3 ambient;	
	vec3 diffuse;
	//vec3 specular;
	
	//attenuation
	float quad;
	float lin;
	float con;
};



uniform Material material;
uniform Light lite;
uniform float near;
uniform float far;

float linearDepth(float nlDepth, float n, float f);

void main()
{


	vec3 ambient = lite.ambient * texture(material.texture_diffuse1,TexCoords).rgb;
	vec3 diffuse = lite.diffuse* DiffAmt*texture(material.texture_diffuse1,TexCoords).rgb;

	FragColor = vec4(ambient + diffuse,1.0f);

	//FragColor = vec4(vec3(linearDepth(gl_FragCoord.z,near,far)),1.0);



}



float linearDepth(float nlDepth, float n, float f)
{
	float ndc = 2.0f*nlDepth - 1.0f;
	float linear = 2*f*n/((f+n)-ndc*(f-n));
	float linearNormalized = (linear-n)/(f-n);

	return linearNormalized;
}
