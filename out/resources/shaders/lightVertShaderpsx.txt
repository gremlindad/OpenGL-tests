#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec2 aTexCoords;


out vec3 Normal;
out vec3 FragPos;
//out vec2 TexCoords;
noperspective out vec2 TexCoords;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main()
{
	vec2 resolution = vec2(320,240)*0.5f;
	vec4 clipVerts = projection * view * model * vec4(aPos,1.0);

	//normalized verts in ndc
	vec4 snapped = clipVerts;
	snapped.xyz = clipVerts.xyz/clipVerts.w;
	
	//scale them by the griddy
	snapped.xy = floor(resolution * snapped.xy)/resolution;
	
	//then scale them back by w
	snapped.xyz *= clipVerts.w; 
	
	Normal = mat3(transpose(inverse(model)))*aNormal;
	FragPos = vec3(model*vec4(aPos,1.0f));//send world position
	TexCoords = aTexCoords;

	gl_Position = snapped;
}

